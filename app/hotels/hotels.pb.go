// protoc --go_out=plugins=grpc:. *.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: app/hotels/hotels.proto

package hotels

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Hotel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,14,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt     *timestamp.Timestamp `protobuf:"bytes,15,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	HotelID       string               `protobuf:"bytes,1,opt,name=HotelID,proto3" json:"HotelID,omitempty"`
	Name          string               `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Email         string               `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	Country       string               `protobuf:"bytes,4,opt,name=Country,proto3" json:"Country,omitempty"`
	City          string               `protobuf:"bytes,5,opt,name=City,proto3" json:"City,omitempty"`
	Description   string               `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
	Location      string               `protobuf:"bytes,7,opt,name=Location,proto3" json:"Location,omitempty"`
	Image         string               `protobuf:"bytes,9,opt,name=Image,proto3" json:"Image,omitempty"`
	Photos        []string             `protobuf:"bytes,10,rep,name=Photos,proto3" json:"Photos,omitempty"`
	CommentsCount int64                `protobuf:"varint,11,opt,name=CommentsCount,proto3" json:"CommentsCount,omitempty"`
	Rating        float64              `protobuf:"fixed64,8,opt,name=Rating,proto3" json:"Rating,omitempty"`
	Latitude      float64              `protobuf:"fixed64,12,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	Longitude     float64              `protobuf:"fixed64,13,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
}

func (x *Hotel) Reset() {
	*x = Hotel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_hotels_hotels_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hotel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hotel) ProtoMessage() {}

func (x *Hotel) ProtoReflect() protoreflect.Message {
	mi := &file_app_hotels_hotels_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hotel.ProtoReflect.Descriptor instead.
func (*Hotel) Descriptor() ([]byte, []int) {
	return file_app_hotels_hotels_proto_rawDescGZIP(), []int{0}
}

func (x *Hotel) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Hotel) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Hotel) GetHotelID() string {
	if x != nil {
		return x.HotelID
	}
	return ""
}

func (x *Hotel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Hotel) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Hotel) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Hotel) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Hotel) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Hotel) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Hotel) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Hotel) GetPhotos() []string {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *Hotel) GetCommentsCount() int64 {
	if x != nil {
		return x.CommentsCount
	}
	return 0
}

func (x *Hotel) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Hotel) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Hotel) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type GetByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HotelID string `protobuf:"bytes,1,opt,name=HotelID,proto3" json:"HotelID,omitempty"`
}

func (x *GetByIDRequest) Reset() {
	*x = GetByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_hotels_hotels_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIDRequest) ProtoMessage() {}

func (x *GetByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_hotels_hotels_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIDRequest.ProtoReflect.Descriptor instead.
func (*GetByIDRequest) Descriptor() ([]byte, []int) {
	return file_app_hotels_hotels_proto_rawDescGZIP(), []int{1}
}

func (x *GetByIDRequest) GetHotelID() string {
	if x != nil {
		return x.HotelID
	}
	return ""
}

type GetByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hotel *Hotel `protobuf:"bytes,1,opt,name=Hotel,proto3" json:"Hotel,omitempty"`
}

func (x *GetByIDResponse) Reset() {
	*x = GetByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_hotels_hotels_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIDResponse) ProtoMessage() {}

func (x *GetByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_hotels_hotels_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIDResponse.ProtoReflect.Descriptor instead.
func (*GetByIDResponse) Descriptor() ([]byte, []int) {
	return file_app_hotels_hotels_proto_rawDescGZIP(), []int{2}
}

func (x *GetByIDResponse) GetHotel() *Hotel {
	if x != nil {
		return x.Hotel
	}
	return nil
}

type GetHotelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *GetHotelsRequest) Reset() {
	*x = GetHotelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_hotels_hotels_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotelsRequest) ProtoMessage() {}

func (x *GetHotelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_hotels_hotels_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotelsRequest.ProtoReflect.Descriptor instead.
func (*GetHotelsRequest) Descriptor() ([]byte, []int) {
	return file_app_hotels_hotels_proto_rawDescGZIP(), []int{3}
}

func (x *GetHotelsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetHotelsRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type GetHotelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount int64    `protobuf:"varint,1,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
	TotalPages int64    `protobuf:"varint,2,opt,name=TotalPages,proto3" json:"TotalPages,omitempty"`
	Page       int64    `protobuf:"varint,3,opt,name=Page,proto3" json:"Page,omitempty"`
	Size       int64    `protobuf:"varint,4,opt,name=Size,proto3" json:"Size,omitempty"`
	HasMore    bool     `protobuf:"varint,5,opt,name=HasMore,proto3" json:"HasMore,omitempty"`
	Hotels     []*Hotel `protobuf:"bytes,6,rep,name=Hotels,proto3" json:"Hotels,omitempty"`
}

func (x *GetHotelsResponse) Reset() {
	*x = GetHotelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_hotels_hotels_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotelsResponse) ProtoMessage() {}

func (x *GetHotelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_hotels_hotels_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotelsResponse.ProtoReflect.Descriptor instead.
func (*GetHotelsResponse) Descriptor() ([]byte, []int) {
	return file_app_hotels_hotels_proto_rawDescGZIP(), []int{4}
}

func (x *GetHotelsResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetHotelsResponse) GetTotalPages() int64 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *GetHotelsResponse) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetHotelsResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetHotelsResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *GetHotelsResponse) GetHotels() []*Hotel {
	if x != nil {
		return x.Hotels
	}
	return nil
}

type CreateHotelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Email         string   `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	Country       string   `protobuf:"bytes,3,opt,name=Country,proto3" json:"Country,omitempty"`
	City          string   `protobuf:"bytes,4,opt,name=City,proto3" json:"City,omitempty"`
	Description   string   `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	Location      string   `protobuf:"bytes,6,opt,name=Location,proto3" json:"Location,omitempty"`
	Image         string   `protobuf:"bytes,8,opt,name=Image,proto3" json:"Image,omitempty"`
	Photos        []string `protobuf:"bytes,9,rep,name=Photos,proto3" json:"Photos,omitempty"`
	CommentsCount int64    `protobuf:"varint,10,opt,name=CommentsCount,proto3" json:"CommentsCount,omitempty"`
	Rating        float64  `protobuf:"fixed64,7,opt,name=Rating,proto3" json:"Rating,omitempty"`
	Latitude      float64  `protobuf:"fixed64,11,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	Longitude     float64  `protobuf:"fixed64,12,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
}

func (x *CreateHotelRequest) Reset() {
	*x = CreateHotelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_hotels_hotels_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHotelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHotelRequest) ProtoMessage() {}

func (x *CreateHotelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_hotels_hotels_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHotelRequest.ProtoReflect.Descriptor instead.
func (*CreateHotelRequest) Descriptor() ([]byte, []int) {
	return file_app_hotels_hotels_proto_rawDescGZIP(), []int{5}
}

func (x *CreateHotelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateHotelRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateHotelRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CreateHotelRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CreateHotelRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateHotelRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *CreateHotelRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CreateHotelRequest) GetPhotos() []string {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *CreateHotelRequest) GetCommentsCount() int64 {
	if x != nil {
		return x.CommentsCount
	}
	return 0
}

func (x *CreateHotelRequest) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *CreateHotelRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CreateHotelRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type CreateHotelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hotel *Hotel `protobuf:"bytes,1,opt,name=Hotel,proto3" json:"Hotel,omitempty"`
}

func (x *CreateHotelResponse) Reset() {
	*x = CreateHotelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_hotels_hotels_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHotelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHotelResponse) ProtoMessage() {}

func (x *CreateHotelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_hotels_hotels_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHotelResponse.ProtoReflect.Descriptor instead.
func (*CreateHotelResponse) Descriptor() ([]byte, []int) {
	return file_app_hotels_hotels_proto_rawDescGZIP(), []int{6}
}

func (x *CreateHotelResponse) GetHotel() *Hotel {
	if x != nil {
		return x.Hotel
	}
	return nil
}

type UpdateHotelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HotelID       string   `protobuf:"bytes,1,opt,name=HotelID,proto3" json:"HotelID,omitempty"`
	Name          string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Email         string   `protobuf:"bytes,3,opt,name=Email,proto3" json:"Email,omitempty"`
	Country       string   `protobuf:"bytes,4,opt,name=Country,proto3" json:"Country,omitempty"`
	City          string   `protobuf:"bytes,5,opt,name=City,proto3" json:"City,omitempty"`
	Description   string   `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
	Location      string   `protobuf:"bytes,7,opt,name=Location,proto3" json:"Location,omitempty"`
	Image         string   `protobuf:"bytes,9,opt,name=Image,proto3" json:"Image,omitempty"`
	Photos        []string `protobuf:"bytes,10,rep,name=Photos,proto3" json:"Photos,omitempty"`
	CommentsCount int64    `protobuf:"varint,11,opt,name=CommentsCount,proto3" json:"CommentsCount,omitempty"`
	Rating        float64  `protobuf:"fixed64,8,opt,name=Rating,proto3" json:"Rating,omitempty"`
	Latitude      float64  `protobuf:"fixed64,12,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	Longitude     float64  `protobuf:"fixed64,13,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
}

func (x *UpdateHotelRequest) Reset() {
	*x = UpdateHotelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_hotels_hotels_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHotelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHotelRequest) ProtoMessage() {}

func (x *UpdateHotelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_hotels_hotels_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHotelRequest.ProtoReflect.Descriptor instead.
func (*UpdateHotelRequest) Descriptor() ([]byte, []int) {
	return file_app_hotels_hotels_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateHotelRequest) GetHotelID() string {
	if x != nil {
		return x.HotelID
	}
	return ""
}

func (x *UpdateHotelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateHotelRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateHotelRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UpdateHotelRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UpdateHotelRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateHotelRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *UpdateHotelRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *UpdateHotelRequest) GetPhotos() []string {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *UpdateHotelRequest) GetCommentsCount() int64 {
	if x != nil {
		return x.CommentsCount
	}
	return 0
}

func (x *UpdateHotelRequest) GetRating() float64 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *UpdateHotelRequest) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *UpdateHotelRequest) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

type UpdateHotelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hotel *Hotel `protobuf:"bytes,1,opt,name=Hotel,proto3" json:"Hotel,omitempty"`
}

func (x *UpdateHotelResponse) Reset() {
	*x = UpdateHotelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_hotels_hotels_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHotelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHotelResponse) ProtoMessage() {}

func (x *UpdateHotelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_hotels_hotels_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHotelResponse.ProtoReflect.Descriptor instead.
func (*UpdateHotelResponse) Descriptor() ([]byte, []int) {
	return file_app_hotels_hotels_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateHotelResponse) GetHotel() *Hotel {
	if x != nil {
		return x.Hotel
	}
	return nil
}

type UploadImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HotelID     string `protobuf:"bytes,1,opt,name=HotelID,proto3" json:"HotelID,omitempty"`
	ContentType string `protobuf:"bytes,3,opt,name=ContentType,proto3" json:"ContentType,omitempty"`
	Data        []byte `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *UploadImageRequest) Reset() {
	*x = UploadImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_hotels_hotels_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageRequest) ProtoMessage() {}

func (x *UploadImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_app_hotels_hotels_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageRequest.ProtoReflect.Descriptor instead.
func (*UploadImageRequest) Descriptor() ([]byte, []int) {
	return file_app_hotels_hotels_proto_rawDescGZIP(), []int{9}
}

func (x *UploadImageRequest) GetHotelID() string {
	if x != nil {
		return x.HotelID
	}
	return ""
}

func (x *UploadImageRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *UploadImageRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HotelID string `protobuf:"bytes,1,opt,name=HotelID,proto3" json:"HotelID,omitempty"`
}

func (x *UploadImageResponse) Reset() {
	*x = UploadImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_app_hotels_hotels_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageResponse) ProtoMessage() {}

func (x *UploadImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_app_hotels_hotels_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageResponse.ProtoReflect.Descriptor instead.
func (*UploadImageResponse) Descriptor() ([]byte, []int) {
	return file_app_hotels_hotels_proto_rawDescGZIP(), []int{10}
}

func (x *UploadImageResponse) GetHotelID() string {
	if x != nil {
		return x.HotelID
	}
	return ""
}

var File_app_hotels_hotels_proto protoreflect.FileDescriptor

var file_app_hotels_hotels_proto_rawDesc = []byte{
	0x0a, 0x17, 0x61, 0x70, 0x70, 0x2f, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x2f, 0x68, 0x6f, 0x74,
	0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x68, 0x6f, 0x74, 0x65, 0x6c,
	0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xd1, 0x03, 0x0a, 0x05, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x12, 0x38, 0x0a, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69,
	0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x2a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x6f, 0x74, 0x65,
	0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x48, 0x6f, 0x74, 0x65, 0x6c,
	0x49, 0x44, 0x22, 0x36, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x2e, 0x48, 0x6f,
	0x74, 0x65, 0x6c, 0x52, 0x05, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x22, 0x3a, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x48, 0x6f,
	0x74, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x48, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x25,
	0x0a, 0x06, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x2e, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x52, 0x06, 0x48,
	0x6f, 0x74, 0x65, 0x6c, 0x73, 0x22, 0xd0, 0x02, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x48, 0x6f, 0x74, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x43, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a,
	0x0a, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22, 0x3a, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x23, 0x0a, 0x05, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x2e, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x52, 0x05, 0x48,
	0x6f, 0x74, 0x65, 0x6c, 0x22, 0xea, 0x02, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x74, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x48,
	0x6f, 0x74, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x48, 0x6f,
	0x74, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x69, 0x74,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x4c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x22, 0x3a, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x48, 0x6f, 0x74, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73,
	0x2e, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x52, 0x05, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x22, 0x64, 0x0a,
	0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x2f, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x48, 0x6f,
	0x74, 0x65, 0x6c, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x48, 0x6f, 0x74,
	0x65, 0x6c, 0x49, 0x44, 0x32, 0xf4, 0x02, 0x0a, 0x0d, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x48, 0x6f, 0x74, 0x65, 0x6c, 0x12, 0x1a, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x48, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x12,
	0x1a, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x6f, 0x74, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x68, 0x6f,
	0x74, 0x65, 0x6c, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x74, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x12, 0x16, 0x2e, 0x68, 0x6f, 0x74,
	0x65, 0x6c, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x12, 0x18, 0x2e, 0x68, 0x6f, 0x74,
	0x65, 0x6c, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x48, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x48, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x2e, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x68,
	0x6f, 0x74, 0x65, 0x6c, 0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x36, 0x5a, 0x34, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x64, 0x75, 0x2f, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2d, 0x64, 0x65, 0x6d,
	0x6f, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x68, 0x6f, 0x74, 0x65, 0x6c, 0x73, 0x3b, 0x68, 0x6f, 0x74,
	0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_app_hotels_hotels_proto_rawDescOnce sync.Once
	file_app_hotels_hotels_proto_rawDescData = file_app_hotels_hotels_proto_rawDesc
)

func file_app_hotels_hotels_proto_rawDescGZIP() []byte {
	file_app_hotels_hotels_proto_rawDescOnce.Do(func() {
		file_app_hotels_hotels_proto_rawDescData = protoimpl.X.CompressGZIP(file_app_hotels_hotels_proto_rawDescData)
	})
	return file_app_hotels_hotels_proto_rawDescData
}

var file_app_hotels_hotels_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_app_hotels_hotels_proto_goTypes = []interface{}{
	(*Hotel)(nil),               // 0: hotels.Hotel
	(*GetByIDRequest)(nil),      // 1: hotels.GetByIDRequest
	(*GetByIDResponse)(nil),     // 2: hotels.GetByIDResponse
	(*GetHotelsRequest)(nil),    // 3: hotels.GetHotelsRequest
	(*GetHotelsResponse)(nil),   // 4: hotels.GetHotelsResponse
	(*CreateHotelRequest)(nil),  // 5: hotels.CreateHotelRequest
	(*CreateHotelResponse)(nil), // 6: hotels.CreateHotelResponse
	(*UpdateHotelRequest)(nil),  // 7: hotels.UpdateHotelRequest
	(*UpdateHotelResponse)(nil), // 8: hotels.UpdateHotelResponse
	(*UploadImageRequest)(nil),  // 9: hotels.UploadImageRequest
	(*UploadImageResponse)(nil), // 10: hotels.UploadImageResponse
	(*timestamp.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_app_hotels_hotels_proto_depIdxs = []int32{
	11, // 0: hotels.Hotel.CreatedAt:type_name -> google.protobuf.Timestamp
	11, // 1: hotels.Hotel.UpdatedAt:type_name -> google.protobuf.Timestamp
	0,  // 2: hotels.GetByIDResponse.Hotel:type_name -> hotels.Hotel
	0,  // 3: hotels.GetHotelsResponse.Hotels:type_name -> hotels.Hotel
	0,  // 4: hotels.CreateHotelResponse.Hotel:type_name -> hotels.Hotel
	0,  // 5: hotels.UpdateHotelResponse.Hotel:type_name -> hotels.Hotel
	5,  // 6: hotels.HotelsService.CreateHotel:input_type -> hotels.CreateHotelRequest
	7,  // 7: hotels.HotelsService.UpdateHotel:input_type -> hotels.UpdateHotelRequest
	1,  // 8: hotels.HotelsService.GetHotelByID:input_type -> hotels.GetByIDRequest
	3,  // 9: hotels.HotelsService.GetHotels:input_type -> hotels.GetHotelsRequest
	9,  // 10: hotels.HotelsService.UploadImage:input_type -> hotels.UploadImageRequest
	6,  // 11: hotels.HotelsService.CreateHotel:output_type -> hotels.CreateHotelResponse
	8,  // 12: hotels.HotelsService.UpdateHotel:output_type -> hotels.UpdateHotelResponse
	2,  // 13: hotels.HotelsService.GetHotelByID:output_type -> hotels.GetByIDResponse
	4,  // 14: hotels.HotelsService.GetHotels:output_type -> hotels.GetHotelsResponse
	10, // 15: hotels.HotelsService.UploadImage:output_type -> hotels.UploadImageResponse
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_app_hotels_hotels_proto_init() }
func file_app_hotels_hotels_proto_init() {
	if File_app_hotels_hotels_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_app_hotels_hotels_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hotel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_hotels_hotels_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_hotels_hotels_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_hotels_hotels_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_hotels_hotels_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_hotels_hotels_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHotelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_hotels_hotels_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHotelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_hotels_hotels_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHotelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_hotels_hotels_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHotelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_hotels_hotels_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_app_hotels_hotels_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_app_hotels_hotels_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_app_hotels_hotels_proto_goTypes,
		DependencyIndexes: file_app_hotels_hotels_proto_depIdxs,
		MessageInfos:      file_app_hotels_hotels_proto_msgTypes,
	}.Build()
	File_app_hotels_hotels_proto = out.File
	file_app_hotels_hotels_proto_rawDesc = nil
	file_app_hotels_hotels_proto_goTypes = nil
	file_app_hotels_hotels_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HotelsServiceClient is the client API for HotelsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HotelsServiceClient interface {
	CreateHotel(ctx context.Context, in *CreateHotelRequest, opts ...grpc.CallOption) (*CreateHotelResponse, error)
	UpdateHotel(ctx context.Context, in *UpdateHotelRequest, opts ...grpc.CallOption) (*UpdateHotelResponse, error)
	GetHotelByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*GetByIDResponse, error)
	GetHotels(ctx context.Context, in *GetHotelsRequest, opts ...grpc.CallOption) (*GetHotelsResponse, error)
	UploadImage(ctx context.Context, in *UploadImageRequest, opts ...grpc.CallOption) (*UploadImageResponse, error)
}

type hotelsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHotelsServiceClient(cc grpc.ClientConnInterface) HotelsServiceClient {
	return &hotelsServiceClient{cc}
}

func (c *hotelsServiceClient) CreateHotel(ctx context.Context, in *CreateHotelRequest, opts ...grpc.CallOption) (*CreateHotelResponse, error) {
	out := new(CreateHotelResponse)
	err := c.cc.Invoke(ctx, "/hotels.HotelsService/CreateHotel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hotelsServiceClient) UpdateHotel(ctx context.Context, in *UpdateHotelRequest, opts ...grpc.CallOption) (*UpdateHotelResponse, error) {
	out := new(UpdateHotelResponse)
	err := c.cc.Invoke(ctx, "/hotels.HotelsService/UpdateHotel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hotelsServiceClient) GetHotelByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*GetByIDResponse, error) {
	out := new(GetByIDResponse)
	err := c.cc.Invoke(ctx, "/hotels.HotelsService/GetHotelByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hotelsServiceClient) GetHotels(ctx context.Context, in *GetHotelsRequest, opts ...grpc.CallOption) (*GetHotelsResponse, error) {
	out := new(GetHotelsResponse)
	err := c.cc.Invoke(ctx, "/hotels.HotelsService/GetHotels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hotelsServiceClient) UploadImage(ctx context.Context, in *UploadImageRequest, opts ...grpc.CallOption) (*UploadImageResponse, error) {
	out := new(UploadImageResponse)
	err := c.cc.Invoke(ctx, "/hotels.HotelsService/UploadImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HotelsServiceServer is the server API for HotelsService service.
type HotelsServiceServer interface {
	CreateHotel(context.Context, *CreateHotelRequest) (*CreateHotelResponse, error)
	UpdateHotel(context.Context, *UpdateHotelRequest) (*UpdateHotelResponse, error)
	GetHotelByID(context.Context, *GetByIDRequest) (*GetByIDResponse, error)
	GetHotels(context.Context, *GetHotelsRequest) (*GetHotelsResponse, error)
	UploadImage(context.Context, *UploadImageRequest) (*UploadImageResponse, error)
}

// UnimplementedHotelsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHotelsServiceServer struct {
}

func (*UnimplementedHotelsServiceServer) CreateHotel(context.Context, *CreateHotelRequest) (*CreateHotelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateHotel not implemented")
}
func (*UnimplementedHotelsServiceServer) UpdateHotel(context.Context, *UpdateHotelRequest) (*UpdateHotelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateHotel not implemented")
}
func (*UnimplementedHotelsServiceServer) GetHotelByID(context.Context, *GetByIDRequest) (*GetByIDResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHotelByID not implemented")
}
func (*UnimplementedHotelsServiceServer) GetHotels(context.Context, *GetHotelsRequest) (*GetHotelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHotels not implemented")
}
func (*UnimplementedHotelsServiceServer) UploadImage(context.Context, *UploadImageRequest) (*UploadImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadImage not implemented")
}

func RegisterHotelsServiceServer(s *grpc.Server, srv HotelsServiceServer) {
	s.RegisterService(&_HotelsService_serviceDesc, srv)
}

func _HotelsService_CreateHotel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateHotelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HotelsServiceServer).CreateHotel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hotels.HotelsService/CreateHotel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HotelsServiceServer).CreateHotel(ctx, req.(*CreateHotelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HotelsService_UpdateHotel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateHotelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HotelsServiceServer).UpdateHotel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hotels.HotelsService/UpdateHotel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HotelsServiceServer).UpdateHotel(ctx, req.(*UpdateHotelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HotelsService_GetHotelByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HotelsServiceServer).GetHotelByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hotels.HotelsService/GetHotelByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HotelsServiceServer).GetHotelByID(ctx, req.(*GetByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HotelsService_GetHotels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHotelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HotelsServiceServer).GetHotels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hotels.HotelsService/GetHotels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HotelsServiceServer).GetHotels(ctx, req.(*GetHotelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HotelsService_UploadImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HotelsServiceServer).UploadImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hotels.HotelsService/UploadImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HotelsServiceServer).UploadImage(ctx, req.(*UploadImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HotelsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hotels.HotelsService",
	HandlerType: (*HotelsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateHotel",
			Handler:    _HotelsService_CreateHotel_Handler,
		},
		{
			MethodName: "UpdateHotel",
			Handler:    _HotelsService_UpdateHotel_Handler,
		},
		{
			MethodName: "GetHotelByID",
			Handler:    _HotelsService_GetHotelByID_Handler,
		},
		{
			MethodName: "GetHotels",
			Handler:    _HotelsService_GetHotels_Handler,
		},
		{
			MethodName: "UploadImage",
			Handler:    _HotelsService_UploadImage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app/hotels/hotels.proto",
}
